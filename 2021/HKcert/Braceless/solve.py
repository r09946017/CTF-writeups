from Crypto.Cipher import AES
from Crypto.Util.number import long_to_bytes
from output import *

n = 110446951303501480772833449831740249386956291916020876093751375902871903224888130759653079843610663745785387324471399660996303413023842305757378754735387646509968068233150555383165341769262148142963593012857985386108102311499719062093851594742178288368522007479194559608887470307027237719982180708265897723469
p = 9652045066278190602016883931654707151974695988738008779245147630083919787193868050066782956560722378274052753509330177721253458030479727445495380220521233
q = n // p

secret = pow(rs[7265], pow(0x10001, -1, (p-1) * (q-1)), n)

enc = bytes.fromhex("bc9bbac8419719a410d6ea03e2866446193658bab48693be8ae7002de34e47ca033da4e9d9ca11f85e9ccabbf03028b347e465c50dfbd47fcbaf5889a332d709")

cipher = AES.new(long_to_bytes(secret), AES.MODE_CBC, b'\0'*16)
flag = cipher.decrypt(enc)
print(flag)
