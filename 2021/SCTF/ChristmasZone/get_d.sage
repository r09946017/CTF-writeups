n = 64392795853847475796939596948374573513341136006013188358665448316305707477998438325517993586430100318003625505157712138814030987620038360820900112359350226402638642419396935215229157012026467896203963294845355310085476165076942465877433408205263068546705226319393063008332679430070032638523530045872344446063
p_plus_q = 16075043011792317702314886102947415867389005788775646985921769735667763497545302824191943535380623937133010105678608525588010746665008631519574789537497184
P.<x> = PolynomialRing(ZZ)
f = x^2 - p_plus_q*x + n
p = f.roots()[0][0]
q = n // p
print(p)
print(q)
assert p*q == n
if p % 4 == 1:
	a = (p-1)^2
else:
	a = p^2-1
if q % 4 == 1:
	b = (q-1)^2
else:
	b = q^2-1
phi = (p^3-p)*(q^3-q)
d = (0x10001).inverse_mod(phi)
print(phi)
print(d)
assert (0x10001 * d) % phi == 1
